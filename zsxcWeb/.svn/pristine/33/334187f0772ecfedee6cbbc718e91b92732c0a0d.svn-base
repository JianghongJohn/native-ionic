//
//  InTimeSignFileController.m
//  掌上行车
//
//  Created by hyjt on 2017/6/1.
//
//

#import "InTimeSignFileController.h"
#import "JH_PrivateHelper.h"
#import <TZImagePickerController.h>
#import "CollectionViewCell.h"
#import "AddCollectionViewCell.h"
#import "JHMediaHelper.h"
#import "MediaModel.h"
@interface InTimeSignFileController ()<UICollectionViewDelegate,UICollectionViewDataSource,TZImagePickerControllerDelegate,UIImagePickerControllerDelegate,UINavigationControllerDelegate>
@property(nonatomic,strong)UICollectionView *collectionView;//布局
@property (nonatomic ,strong) NSMutableArray *imageArray;
@property (nonatomic ,strong) NSMutableArray *imageDataArray;
@end

@implementation InTimeSignFileController
#pragma mark - system (systemMethod override)
- (void)viewDidLoad {
    [super viewDidLoad];
    _imageArray = [NSMutableArray array];
    [self.view addSubview:self.collectionView];
}
#pragma mark - UI (creatSubView and layout)
-(UICollectionView *)collectionView{
    if (!_collectionView) {
        
        UICollectionViewFlowLayout *flowLayOut = [[UICollectionViewFlowLayout alloc] init];
        //        flowLayOut.minimumInteritemSpacing = 11;
        //        flowLayOut.minimumLineSpacing = 11;
        flowLayOut.itemSize = CGSizeMake(kScreen_Width*4/5, kScreen_Width*4/5*1/2);
        flowLayOut.sectionInset = UIEdgeInsetsMake(10, 10, 0, 10);
        _collectionView = [[UICollectionView alloc] initWithFrame:CGRectMake(0,0, kScreen_Width, kScreen_Height-kNavHeight-40) collectionViewLayout:flowLayOut];
        [_collectionView registerClass:[CollectionViewCell class] forCellWithReuseIdentifier:@"cell"];
        [_collectionView registerClass:[AddCollectionViewCell class] forCellWithReuseIdentifier:@"identifier"];
        
        _collectionView.backgroundColor = [UIColor clearColor];
        
        self.collectionView.delegate = self;
        self.collectionView.dataSource = self;
        //        self.collectionView.scrollEnabled = NO;
    }
    return _collectionView;
}
#pragma mark - delegate
- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section{
    
    return self.imageArray.count + 1 ;
    
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath{
    
    AddCollectionViewCell *cell1 = [collectionView dequeueReusableCellWithReuseIdentifier:@"identifier" forIndexPath:indexPath];
    
    if (self.imageArray.count == 0) {
        return cell1;
        
    }else{
        
        CollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"cell" forIndexPath:indexPath];
        for (UIView *view in cell.contentView.subviews) {
            [view removeFromSuperview];
        }
        if (indexPath.item + 1 > self.imageArray.count ) {
            
            return cell1;
            
            
        }else{
            
            MediaModel *model = self.imageArray[indexPath.item];
            //            [cell.imageV sd_setImageWithURL:[NSURL URLWithString:@""] placeholderImage:[UIImage imageNamed:@"p1.jpg"]];
            cell.imageV.image = model.image;
            if (model.isVideo) {
                [cell.imageV addSubview:cell.videoImageV];
            }
            [cell.imageV addSubview:cell.deleteButotn];
            cell.deleteButotn.tag = indexPath.item + 100;
            [cell.deleteButotn addTarget:self action:@selector(deleteImage:) forControlEvents:UIControlEventTouchUpInside];
        }
        
        return cell;
    }
    
}
- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath{
    if (indexPath.item + 1 > self.imageArray.count ) {
        NSLog(@"上传");
        [self submitPictureToServer];
    }else{
        
    }
    
}
-(void)imagePickerController:(TZImagePickerController *)picker didFinishPickingPhotos:(NSArray<UIImage *> *)photos sourceAssets:(NSArray *)assets isSelectOriginalPhoto:(BOOL)isSelectOriginalPhoto{
    [picker dismissViewControllerAnimated:YES completion:nil];
    WeakSelf
    //上传图片
    
    //添加图片
    //1.判断是否超过五张
    if (self.imageArray.count+photos.count>5) {
        kTipAlert(@"资料不能超过五份");
        return;
    }
    for (NSInteger index = 0; index < assets.count; index++) {
        PHAsset *asset = assets[index];
        [JHMediaHelper getMediaInfoFromAsset:asset completion:^(NSString *name, id pathData) {
            MediaModel *model = [[MediaModel alloc] init];
            model.name = name;
            model.uploadType = pathData;
            model.image = photos[index];
            
            [weakSelf.imageArray addObject:model];
            [weakSelf.collectionView reloadData];
        }];
    }
    
    
}
// If user picking a video, this callback will be called.
// If system version > iOS8,asset is kind of PHAsset class, else is ALAsset class.
// 如果用户选择了一个视频，下面的handle会被执行
// 如果系统版本大于iOS8，asset是PHAsset类的对象，否则是ALAsset类的对象
- (void)imagePickerController:(TZImagePickerController *)picker didFinishPickingVideo:(UIImage *)coverImage sourceAssets:(id)asset{
    WeakSelf
    [picker dismissViewControllerAnimated:YES completion:nil];
    //上传图片
    
    //添加图片
    //1.判断是否超过五张
    if (self.imageArray.count+1>5) {
        kTipAlert(@"资料不能超过五份");
        return;
    }
    //获取视频
    [JHMediaHelper getMediaInfoFromAsset:asset completion:^(NSString *name, id pathData) {
        MediaModel *model = [[MediaModel alloc] init];
        model.name = name;
        model.uploadType = pathData;
        model.image = coverImage;
        model.isVideo = YES;
        model.asset = asset;
        [weakSelf.imageArray addObject:model];
        [weakSelf.collectionView reloadData];
    }];
    
    
    
}
///拍照、选视频图片、录像 后的回调
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary<NSString *,id> *)info {
    WeakSelf
    
    MBProgressHUD *hub = [MBProgressHUD MBProgressShowProgressViewWithTitle:@"正在加载" view:[UIApplication sharedApplication].keyWindow];
    [picker dismissViewControllerAnimated:YES completion:nil];
    //1.判断是否超过五张
    if (self.imageArray.count+1>5) {
        kTipAlert(@"资料不能超过五份");
        return;
    }
    //媒体类型
    NSString *mediaType = [info objectForKey:UIImagePickerControllerMediaType];
    //原图URL
    NSURL *imageAssetURL = [info objectForKey:UIImagePickerControllerReferenceURL];
    
    ///视频 和 录像
    if ([mediaType isEqualToString:@"public.movie"]) {
        NSURL *videoAssetURL = [info objectForKey:UIImagePickerControllerMediaURL];
        PHAsset *asset;
        //录像没有原图 所以 imageAssetURL 为nil
        if (imageAssetURL) {
            PHFetchResult *result = [PHAsset fetchAssetsWithALAssetURLs:@[imageAssetURL] options:nil];
            asset = [result firstObject];
        }
        [JHMediaHelper getVideoPathFromURL:videoAssetURL PHAsset:asset enableSave:NO completion:^(NSString *name, UIImage *screenshot, id pathData) {
            MediaModel *model = [[MediaModel alloc] init];
            model.image = screenshot;
            model.name = name;
            model.uploadType = pathData;
            model.isVideo = YES;
            model.mediaURL = videoAssetURL;
            dispatch_async(dispatch_get_main_queue(), ^{
                [hub hideAnimated:YES];
                [weakSelf.imageArray addObject:model];
                [weakSelf.collectionView reloadData];
            });
        }];
        
    }
    
    else if ([mediaType isEqualToString:@"public.image"]) {
        UIImage * image = [info objectForKey:UIImagePickerControllerEditedImage];
        //如果 picker 没有设置可编辑，那么image 为 nil
        if (image == nil) {
            image = [info objectForKey:UIImagePickerControllerOriginalImage];
        }
        
        PHAsset *asset;
        //拍照没有原图 所以 imageAssetURL 为nil
        if (imageAssetURL) {
            PHFetchResult *result = [PHAsset fetchAssetsWithALAssetURLs:@[imageAssetURL] options:nil];
            asset = [result firstObject];
        }
        [JHMediaHelper getImageInfoFromImage:image PHAsset:asset completion:^(NSString *name, NSData *data) {
            MediaModel *model = [[MediaModel alloc] init];
            model.image = image;
            model.name = name;
            model.uploadType = data;
            dispatch_async(dispatch_get_main_queue(), ^{
                [hub hideAnimated:YES];
                [weakSelf.imageArray addObject:model];
                [weakSelf.collectionView reloadData];
            });
        }];
        
    }
    
}
#pragma mark - utilMethod

-(void)deleteImage:(UIButton *)btn{
    NSInteger index = btn.tag - 100;
    //    NSLog(@"index=%ld",index);
    //    NSLog(@"+++%ld",self.imageDataArray.count);
    //    NSLog(@"---%ld",self.imageArray.count);
    [JHAlertControllerTool alertTitle:@"提示" mesasge:@"确认删除该媒体信息？" preferredStyle:UIAlertControllerStyleAlert confirmHandler:^(UIAlertAction *action) {
        [self.imageArray removeObjectAtIndex:index];
        [self.collectionView reloadData];

    } cancleHandler:^(UIAlertAction *action) {
        
    } viewController:self];
    
    
}

-(void)submitPictureToServer{
    WeakSelf
    JHActionSheet *action = [[JHActionSheet alloc] initWithTitle:@"添加文件" cancelButtonTitle:@"取消" destructiveButtonTitle:nil otherButtonTitles:@[@"媒体",@"拍照",@"拍摄"] handler:^(JHActionSheet *actionSheet, NSInteger index) {
        if (index==1) {//媒体
            //判断是否可用
            TZImagePickerController *imagePickerVc = [[TZImagePickerController alloc] initWithMaxImagesCount:9 delegate:self];
            [weakSelf presentViewController:imagePickerVc animated:YES completion:nil];
            
        }else if (index==2) {//拍照
            [weakSelf openCamera];
        }else if (index==3) {//拍摄
            [weakSelf openVideotape];
        }else{
            return;
        }

    }];
    [action show];
    
    
}
/** 相机 */
- (void)openCamera {
    UIImagePickerControllerSourceType sourceType = UIImagePickerControllerSourceTypeCamera;
    
    if ([UIImagePickerController isSourceTypeAvailable: UIImagePickerControllerSourceTypeCamera]){
        UIImagePickerController *picker = [[UIImagePickerController alloc] init];
        picker.delegate = self;
        //设置拍照后的图片可被编辑
        picker.sourceType = sourceType;
        [self presentViewController:picker animated:YES completion:nil];
    }else{
        kTipAlert(@"当前设备不支持拍照");
    }
}

/** 录像 */
- (void)openVideotape {
    UIImagePickerController *picker = [[UIImagePickerController alloc] init];
    picker.delegate = self;
    if ([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]) {
        NSArray * mediaTypes =[UIImagePickerController  availableMediaTypesForSourceType:UIImagePickerControllerSourceTypeCamera];
        picker.sourceType = UIImagePickerControllerSourceTypeCamera;
        picker.mediaTypes = mediaTypes;
        picker.cameraCaptureMode = UIImagePickerControllerCameraCaptureModeVideo;
        picker.videoQuality = UIImagePickerControllerQualityTypeMedium; //录像质量
        picker.videoMaximumDuration = 20;        //录像最长时间
    } else {
         kTipAlert(@"当前设备不支持录像");
    }
    [self presentViewController:picker animated:YES completion:nil];
    
}


@end
