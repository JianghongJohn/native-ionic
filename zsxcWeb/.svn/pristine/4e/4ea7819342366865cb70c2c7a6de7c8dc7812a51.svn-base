//
//  Root_CarOederController.m
//  掌上行车
//
//  Created by hyjt on 2017/5/8.
//
//

#import "Root_CarOederController.h"
#import "JHMenuControlView.h"
#import "CarOrderBuyerController.h"
#import "CarOrderSpouseController.h"
#import "CarOrderGuaranteeController.h"
#import "CarOrderCarInfoController.h"
#import "CarOrderAdvanceController.h"
#import "CarOrderDetailModel.h"
@interface Root_CarOederController ()<UIGestureRecognizerDelegate>
{
    CarOrderBuyerController *_buyer;
    CarOrderCarInfoController *_car;
    CarOrderAdvanceController *_advance;
    CarOrderGuaranteeController *_assure;
    CarOrderSpouseController *_mate;
}
@property (nonatomic, strong) JHMenuControlView *cursorView;
@end
static const CGFloat menuHeight = 40;
@implementation Root_CarOederController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.title = @"初审单录入";
    self.automaticallyAdjustsScrollViewInsets = NO;
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@"button_back"] style:0 target:self action:@selector(navigationShouldPopOnBackButton)];
    [self _loadData];
    
}
//关于导航栏右滑动作禁止，点击返回拦截的操作
- (void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    // 禁用 iOS7 返回手势
    if ([self.navigationController respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
        
        self.navigationController.interactivePopGestureRecognizer.enabled = NO;
    }
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    // 开启
    if ([self.navigationController respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
        
        self.navigationController.interactivePopGestureRecognizer.enabled = YES;
    }
}
/**
 点击退出主动拦截
 */
- (void)navigationShouldPopOnBackButton{
    UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"提示" message:@"您确认要关闭初审单录入？" preferredStyle:UIAlertControllerStyleAlert];
    UIAlertAction *actionCertain = [UIAlertAction actionWithTitle:@"确认" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        //popVC
        [self.navigationController popViewControllerAnimated:YES];
    }];
    UIAlertAction *actionCancel = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:nil];
    [alertController addAction:actionCertain];
    [alertController addAction:actionCancel];
    [self  presentViewController:alertController animated:YES completion:nil];
    
}

/**
 加载数据
 */
-(void)_loadData{
    if (self.ordernumber) {
        [JH_NetWorking requestData:[kBaseUrlStr_Local1 stringByAppendingString:kgetorderinfo] HTTPMethod:HttpMethodGet showHud:YES params:[JH_NetWorking addKeyAndUIdForRequest:@{@"ordernumber":self.ordernumber}] completionHandle:^(id result) {
            if ([result[@"code"]isEqualToString:@"10000"]) {
               [self addChildVC:result[@"orderinfo"]];
                
            }else{
                [MBProgressHUD MBProgressShowSuccess:NO WithTitle:result[@"info"] view:[UIApplication sharedApplication].keyWindow];
            }

        } errorHandle:^(NSError *error) {
            [self _creatNoNetWorkView];
        }];
    }
}

/**
 创建子视图，并传递相关的数据

 @param data
 */
-(void)addChildVC:(NSDictionary *)data{
    CarOrderDetailModel *detailModel = [[CarOrderDetailModel alloc]initWithDictionary:data];
    //固定有的三个标题
    NSMutableArray *titles = [NSMutableArray arrayWithObjects:@"购车人",@"车辆信息",@"垫款信息", nil];
    //设置所有子controller
    NSMutableArray *controllers = [NSMutableArray array];
    _buyer = [[CarOrderBuyerController alloc] init];
    _buyer.viewModel = [[CarOrderBuyerViewModel alloc] init];
    _buyer.viewModel.carMan = detailModel.carman;
    _buyer.viewModel.baseInfo = detailModel.baseinfo;
    _car = [[CarOrderCarInfoController alloc] init];
    _car.car = detailModel.car;
    _advance = [[CarOrderAdvanceController alloc] init];
    _advance.advance = detailModel.advance;
    [controllers addObject:_buyer];
    [controllers addObject:_car];
    [controllers addObject:_advance];
    //根据是否有担保人字段插入数据（1）
    if (detailModel.assure) {
        _assure = [[CarOrderGuaranteeController alloc] init];
        _assure.assureList = detailModel.assure;
        [controllers insertObject:_assure atIndex:1];
        [titles insertObject:@"担保人" atIndex:1];
    }
    //根据配偶信息的有无插入（1）
    if (detailModel.mate && detailModel.mate.base.name) {
        _mate = [[CarOrderSpouseController alloc] init];
        _mate.viewModel = [[CarOrderMateViewModel alloc]init];
        _mate.viewModel.mate = detailModel.mate;
        [controllers insertObject:_mate atIndex:1];
        [titles insertObject:@"配偶" atIndex:1];
    }
    _cursorView = [[JHMenuControlView alloc]initWithFrame:CGRectMake(0, kNavHeight, CGRectGetWidth(self.view.bounds),menuHeight) withParentViewController:self withTitles:titles withControllers:controllers withOnePageCount:titles.count];
    //设置子页面容器的高度
    _cursorView.contentViewHeight = kScreen_Height-menuHeight-kNavHeight;
    
    //设置字体和颜色
    //    _cursorView.normalColor = [UIColor blackColor];
    _cursorView.selectedColor = kBaseColor;
    //    _cursorView.selectedFont = [UIFont systemFontOfSize:16];
    //    _cursorView.normalFont = [UIFont systemFontOfSize:13];
    //    _cursorView.backgroundColor = [UIColor whiteColor];
    _cursorView.lineView.backgroundColor = kBaseColor;
    
    [self.view addSubview:_cursorView];
    
    //属性设置完成后，调用此方法绘制界面
    [_cursorView reloadPages];
    
    
}


@end
