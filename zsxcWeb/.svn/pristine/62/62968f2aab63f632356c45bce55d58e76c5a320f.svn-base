//
//  InTimeSIgnGPSController.m
//  掌上行车
//
//  Created by hyjt on 2017/5/31.
//
//

#import "InTimeSIgnGPSController.h"
#import <CoreLocation/CoreLocation.h>
#import "JH_PrivateHelper.h"
#import "InTimeSignGPSViewModel.h"
@interface InTimeSIgnGPSController ()<CLLocationManagerDelegate,UITableViewDelegate,UITableViewDataSource>
@property(nonatomic,strong)CLLocationManager *locationManager;//定位管理
@property(nonatomic,strong)CLGeocoder *geocoder;//地理编码;
@property(nonatomic,strong)UIButton *locationButton;//定位按钮
@property(nonatomic,strong)UITableView *tableView;
@property(nonatomic,strong)InTimeSignGPSViewModel *viewModel;
@end

@implementation InTimeSIgnGPSController


#pragma mark - system (systemMethod override)
- (void)viewDidLoad {
    [super viewDidLoad];
    self.navigationItem.title = @"GPS定位";
    if (!_viewModel) {
        _viewModel = [[InTimeSignGPSViewModel alloc] init];
    }
    [self _headerView];
    [self.view addSubview:self.tableView];
    
}
#pragma mark - UI (creatSubView and layout)
//日期、定位按钮、tableView
-(void)_headerView{
    UIView *header = [[UIView alloc]initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, 40)];
    header.backgroundColor = [UIColor whiteColor];
    self.tableView.tableHeaderView = header;
    _locationButton = [[UIButton alloc]initWithFrame:header.frame];
    [_locationButton setTitle:@"立即定位" forState:0];
    _locationButton.titleLabel.font = [UIFont systemFontOfSize:15];
    _locationButton.titleLabel.numberOfLines = 2;
    [_locationButton setTitleColor:[UIColor redColor] forState:0];
    [header addSubview:_locationButton];
    [_locationButton addTarget:self action:@selector(_loadLocation) forControlEvents:UIControlEventTouchUpInside];
    
    
    
}
-(UITableView *)tableView{
    if (_tableView==nil) {
        
        _tableView = [[UITableView alloc]initWithFrame:self.view.bounds style:UITableViewStyleGrouped];
        //启用下拉刷新上拉加载
        _tableView.delegate = self;
        _tableView.dataSource = self;

    }
    
    return _tableView;
}
#pragma mark - delegate
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return [self.viewModel JH_numberOfSection];
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section;
{
    return [self.viewModel JH_numberOfRow:section];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath;
{
    return [self.viewModel JH_setUpTableViewCell:tableView indexPath:indexPath WithHandle:^{
        
    }];
}
-(void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath{
    // Remove seperator inset
    if ([cell respondsToSelector:@selector(setSeparatorInset:)]) {
        [cell setSeparatorInset:UIEdgeInsetsMake(0, 0, 0, 0)];
    }
    
    // Prevent the cell from inheriting the Table View's margin settings
    if ([cell respondsToSelector:@selector(setPreservesSuperviewLayoutMargins:)]) {
        [cell setPreservesSuperviewLayoutMargins:NO];
    }
    // Explictly set your cell's layout margins
    if ([cell respondsToSelector:@selector(setLayoutMargins:)]) {
        [cell setLayoutMargins:UIEdgeInsetsZero];
    }
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return [self.viewModel JH_heightForCell:indexPath];
}
-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    return 0.1;
}
-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return 0.1;
}
#pragma mark - utilMethod
/**
 获取定位
 */
-(void)_loadLocation{
    if (!_locationManager) {
        //定位管理器
        _locationManager=[[CLLocationManager alloc]init];
        //设置代理
        _locationManager.delegate=self;
        //设置定位精度
        _locationManager.desiredAccuracy=kCLLocationAccuracyBest;
        //定位频率,每隔多少米定位一次
        CLLocationDistance distance=10.0;//十米定位一次
        _locationManager.distanceFilter=distance;
    }
    if (!_geocoder) {
        //地理编码
        _geocoder=[[CLGeocoder alloc]init];
    }
    
    if (![JH_PrivateHelper checkLocationAuthorizationStatus]) {
        return;
    }
    //如果没有授权则请求用户授权
    if ([CLLocationManager authorizationStatus]==kCLAuthorizationStatusNotDetermined){
        [_locationManager requestWhenInUseAuthorization];
    }else if([CLLocationManager authorizationStatus]==kCLAuthorizationStatusAuthorizedWhenInUse){
        
        //启动跟踪定位
        [_locationManager startUpdatingLocation];
    }
    
    
}
//可以通过模拟器设置一个虚拟位置，否则在模拟器中无法调用此方法
-(void)locationManager:(CLLocationManager *)manager didUpdateLocations:(NSArray *)locations{
    CLLocation *location=[locations firstObject];//取出第一个位置
    CLLocationCoordinate2D coordinate=location.coordinate;//位置坐标
    //        NSLog(@"经度：%f,纬度：%f,海拔：%f,航向：%f,行走速度：%f",coordinate.longitude,coordinate.latitude,location.altitude,location.course,location.speed);
    //根据坐标获取地址
    [self getAddressByLatitude:coordinate.latitude longitude:coordinate.longitude];
    
    
    //如果不需要实时定位，使用完即使关闭定位服务
    [_locationManager stopUpdatingLocation];
}
-(void)getAddressByLatitude:(CLLocationDegrees)latitude longitude:(CLLocationDegrees)longitude{
    //反地理编码
    CLLocation *location=[[CLLocation alloc]initWithLatitude:latitude longitude:longitude];
    WeakSelf
    [_geocoder reverseGeocodeLocation:location completionHandler:^(NSArray *placemarks, NSError *error) {
        CLPlacemark *placemark= [placemarks firstObject];
        
        NSLog(@"详细信息:%@",placemark.addressDictionary);
        [weakSelf.locationButton setTitle: placemark.addressDictionary[@"FormattedAddressLines"][0]?placemark.addressDictionary[@"FormattedAddressLines"][0]:@"定位失败,请稍后再试" forState:0];
        
    }];
}
@end
